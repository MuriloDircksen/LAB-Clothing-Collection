// <auto-generated />
using System;
using LABClothingCollection.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LABClothingCollection.Migrations
{
    [DbContext(typeof(LabClothingCollectionContexto))]
    [Migration("20230615112024_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LABClothingCollection.Models.Colecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataLancamento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Estacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeColecao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("Orcamento")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("NomeColecao")
                        .IsUnique();

                    b.ToTable("Colecoes");
                });

            modelBuilder.Entity("LABClothingCollection.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdColecao")
                        .HasColumnType("int");

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdColecao");

                    b.HasIndex("NomeModelo")
                        .IsUnique();

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("LABClothingCollection.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfOuCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpfOuCnpj")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfOuCnpj = "58080200343",
                            DataNascimento = new DateTime(1968, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro.henrique.monteiro@serteccontabil.com.br",
                            Genero = "Masculino",
                            NomeCompleto = "Pedro Henrique Danilo Monteiro",
                            Status = "ATIVO",
                            Telefone = "48985460199",
                            TipoUsuario = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = 2,
                            CpfOuCnpj = "84052854233",
                            DataNascimento = new DateTime(1981, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lunalaviniaramos@comercialrafael.com.br",
                            NomeCompleto = "Luna Lavínia Ramos",
                            Status = "INATIVO",
                            TipoUsuario = "CRIADOR"
                        },
                        new
                        {
                            Id = 3,
                            CpfOuCnpj = "81456627000153",
                            DataNascimento = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vicente.tiago.depaula@multmed.com.br",
                            NomeCompleto = "Vicente Tiago de Paula",
                            Status = "ATIVO",
                            Telefone = "86992875039",
                            TipoUsuario = "OUTRO"
                        },
                        new
                        {
                            Id = 4,
                            CpfOuCnpj = "61869109000154",
                            DataNascimento = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kevin_mateus_bernardes@genesyslab.com",
                            NomeCompleto = "Kevin Mateus Samuel Bernardes",
                            Status = "INATIVO",
                            Telefone = "83982174816",
                            TipoUsuario = "OUTRO"
                        },
                        new
                        {
                            Id = 5,
                            CpfOuCnpj = "30554862000",
                            DataNascimento = new DateTime(1986, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "priscila_dacunha@hormail.com",
                            Genero = "Feminino",
                            NomeCompleto = "Priscila Rayssa Alice da Cunha",
                            Status = "ATIVO",
                            Telefone = "51986585903",
                            TipoUsuario = "GERENTE"
                        });
                });

            modelBuilder.Entity("LABClothingCollection.Models.Colecao", b =>
                {
                    b.HasOne("LABClothingCollection.Models.Usuario", "Usuario")
                        .WithMany("Colecao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LABClothingCollection.Models.Modelo", b =>
                {
                    b.HasOne("LABClothingCollection.Models.Colecao", "Colecao")
                        .WithMany("Modelo")
                        .HasForeignKey("IdColecao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colecao");
                });

            modelBuilder.Entity("LABClothingCollection.Models.Colecao", b =>
                {
                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("LABClothingCollection.Models.Usuario", b =>
                {
                    b.Navigation("Colecao");
                });
#pragma warning restore 612, 618
        }
    }
}
